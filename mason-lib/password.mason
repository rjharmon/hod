<%method .doc>

<h2>Usage</h2>

<h3>Protecting Your Documents</h3>

<p>In the %init section of your protected document (or in an 
autohandler), add the following code:
</p>
<pre><% <<EOD
return unless \$m->comp('/password.mason', 
    realm => 'Registration Page',  # use your own realm name
    allow => { qw(
        admin 98wfh#D
	) }, 
);
EOD
 |h %></pre>

<p>Substituting, of course, the usernames and passwords that you wish to allow.</p>

<h3>Detecting Whether a Login is Active</h3>

<p>Sometimes you may have a page which is accessible without a password, and you'd 
like to provide extra access for people who <em>did</em> give a password.  This module
will return a username or <code>undef</code>, without <em>requiring</em> a password, 
if you provide the <code>required => 0</code> option.</p>

<p>To simplify this, you may wish to create a module 'login.m', like so:</p>

<pre><% <<EOD
<\%init>
my \$l;
\$l = \$m->comp('/password.mason',
        realm => "My Protected Area Name",
        allow => {
                admin => 'password',
        },
        required => \$required
);
\$m->abort if \$required && ! \$l;
return \$l;
</\%init>
<\%args>
\$required => 0
</\%args>
EOD
 |h %></pre>

<p>Then, from any page or autohandler you wish, you can fetch the current login:</p>

<pre><% <<EOD
\% my \$login = \$m->comp('/login.m');

<p>Your login name: <\% \$login || "<em>not provided</em>" %\>.</p>
EOD
 |h %></pre>

<p>...or, require a login: </p>

<pre><% <<EOD
<\& /login.m, required => 1 &\>
EOD
 |h %></pre>

<h2>Customizing</h2>

<p>To customize the error displayed to visitors who don't have the right password, 
define an auth_failure compponent:</p>

<pre><% <<EOD
<\%def auth_failure>
<h1>Signup Page</h1>
<p>Welcome!  You can sign up for access to this area, 
    if you'd like.</p>
<p>Any HTML markup you like can go here.</p>
</\%def>
EOD
 |h %></pre>

<p>This is used when you don't like the plain-looking error page
that's displayed by default, or if you want to display a signup 
form, suggestive sale, or other content in place of the standard
"Permission Denied" message.
</p>

</%method> 
<%method .doc_synopsis>
	Restrict access to those with the required usernames/passwords.
</%method> 
<%shared>
my $DEBUG = 0;
warn "$$ --- shared\n" if $DEBUG;
my $auth_user = undef;
</%shared>
<%init> 
return $auth_user if $auth_user;
warn "No cached username is available" if $DEBUG;

my $a = $r->header_in('Authorization');
$a =~ s/^Basic (.*)/$1/;
my( $user, $pass ) = split(':', decode_base64( $a ) );

return 1 if $m->top_comp->method_exists(".skip_login_requirement" );

unless( $user && $pass && $allow->{$user} eq $pass ) {
	warn "User '$user', pass '$pass', correct pass: '$allow->{$user}'\n"
		if( $DEBUG > 1 );

		( $DEBUG && warn( "No username provided, but only a fetch was requested" ) ),
	return undef if $fetch;
		( $DEBUG && warn( "No username provided, but it's not required" ) ),
	return undef unless $required;

	warn "Sending WWW-Authenticate: header" if $DEBUG;
	$r->header_out('WWW-Authenticate', "Basic realm=\"$realm\"");
	$r->status(401);
	$r->send_http_header();
	if( $user ) {
		warn "password.mason: $user not authorized";
	} 
} else {
    warn "Authenticated '$user'";
	$auth_user = $user;
	return $user;
}
</%init>
% if( my $error = $m->callers(1)->subcomps('auth_failure') ) {
	<& $error &>
% } else {
<html><body>
<h1>Authentication Required</h1>

<p>The page you requested requires authentication, but your creditials were
rejected.</p>

</body></html>
% }

<%args>
$allow => {}
$realm => 'Protected Area'
$fetch => 0
$required => 1
</%args>
<%once>
use MIME::Base64 qw(decode_base64);
</%once>

<%method .license>

Copyright 1999-2009 Randy Harmon

Hod is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or   
(at your option) any later version.

Hod is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the 
GNU General Public License for more details (in the LICENSE file).           
    
You should have received a copy of the GNU General Public License
along with Hod.  If not, see <http://www.gnu.org/licenses/>.

</%method>
